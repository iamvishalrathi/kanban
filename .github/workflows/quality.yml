name: Code Quality & Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Run ESLint (Backend)
      run: |
        cd backend
        npx eslint . --ext .js,.jsx,.ts,.tsx --format=checkstyle --output-file=eslint-backend.xml || echo "ESLint found issues"

    - name: Run ESLint (Frontend)
      run: |
        cd frontend
        npx eslint . --ext .js,.jsx,.ts,.tsx --format=checkstyle --output-file=eslint-frontend.xml || echo "ESLint found issues"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run Prettier Check
      run: |
        cd backend && npx prettier --check . || echo "Prettier formatting issues found"
        cd ../frontend && npx prettier --check . || echo "Prettier formatting issues found"

    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME\|XXX\|HACK" --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" . || echo "No TODO/FIXME comments found"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=medium

    - name: Upload Snyk results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: snyk.sarif

    - name: Run npm audit
      run: |
        cd backend
        npm audit --json > backend-audit.json || true
        cd ../frontend  
        npm audit --json > frontend-audit.json || true

    - name: Check for hardcoded secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Kanban App'
        path: '.'
        format: 'JSON'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired

  bundle-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build with bundle analysis
      run: |
        cd frontend
        npm run build
        npx vite-bundle-analyzer dist/assets --analyze

    - name: Check bundle size
      uses: preactjs/compressed-size-action@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        pattern: "./frontend/dist/**/*.{js,css}"
        exclude: "{./frontend/dist/**/*.map}"

  accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Run axe accessibility tests
      run: |
        cd frontend
        npm install -g @axe-core/cli
        axe --dir dist --save axe-results.json || echo "Accessibility issues found"

    - name: Upload accessibility results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: axe-results
        path: frontend/axe-results.json